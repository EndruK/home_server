services:
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ./homarr/configs:/app/data/configs
      - ./homarr/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '80:7575'
  # IoT container
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/data:/mosquitto/data
    restart: unless-stopped
    network_mode: "host"
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/data:/var/lib/influxdb2:rw
      - ./influxdb/config:/etc/influxdb2:rw
    restart: unless-stopped
    networks:
      - iot
    depends_on:
      - mosquitto
  telegraf:
    image: telegraf
    container_name: telegraf
    ports:
      - '8125:8125'
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    restart: unless-stopped
    networks:
      - iot
    depends_on:
      - influxdb
  grafana:
    container_name: grafana
    build:
      context: .
      dockerfile: grafana.Dockerfile
    ports:
      - '3000:3000'
    hostname: grafana
    restart: unless-stopped
    volumes:
      - ./grafana/storage:/var/lib/grafana
      - ./grafana/plugins:/var/lib/grafana/plugins
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot
  homeassistant:
    container_name: homeassistant
    image: 'ghcr.io/home-assistant/home-assistant:stable'
    volumes:
      - ./homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    depends_on:
      - mosquitto
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt
    volumes:
      - ./zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8080:8080
    environment:
      - TZ=Europe/Berlin
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    depends_on:
      - mosquitto
    networks:
      - iot
  # media container
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: 'host'
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - type: bind
        source: /mnt/RAID/share/Media/Movies
        target: /media
        read_only: true
      - type: bind
        source: /mnt/RAID/share/Media/Series
        target: /media2
        read_only: true
    restart: unless-stopped
  # network container
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    env_file:
      - ./wireguard/.env
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
networks:
  iot:
